#! /usr/bin/perl
#
#  TOPPERS Software
#      Toyohashi Open Platform for Embedded Real-Time Systems
# 
#  Copyright (C) 2006-2010 by Embedded and Real-Time Systems Laboratory
#              Graduate School of Information Science, Nagoya Univ., JAPAN
# 
#  上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#  ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#  変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#      スコード中に含まれていること．
#  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#      の無保証規定を掲載すること．
#  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#      と．
#    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#        作権表示，この利用条件および下記の無保証規定を掲載すること．
#    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#        報告すること．
#  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#      また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#      由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#      免責すること．
# 
#  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#  よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#  に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#  アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#  の責任を負わない．
# 
#  @(#) $Id: makerelease 1866 2010-07-25 13:19:17Z ertl-hiro $
# 

require 'getcwd.pl';

$cwd = getcwd();
$cwd =~ s/^.*[\/\\]([^\/\\]+)$/$1/;
$prefix = "./".$cwd;

@file_list = ();
%file_list = ();

if ($#ARGV >= 0) {
	$arg1 = $ARGV[0];
	$arg1 =~ s/\.\///;
}
else {
	$arg1 = "MANIFEST";
}

sub gen_path
{
	local($base, $path) = @_;

	while ($path =~ /^..\/(.*)$/) {
		$path = $1;
		$base =~ s/(\/?)[^\/]*\/$/$1/;
	}
	return($base.$path);
}

sub read_file {
	local($filename) = @_;
	local($fh, $dirname);

	if ($filename =~ /^(.*\/)[^\/]*$/) {
		$dirname = $1;
	}
	else {
		$dirname = "";
	}

	open($fh, $filename) || die "Cannot open $infile";
	while ($line = <$fh>) {
		chomp $line;
		$line =~ s/\r$//;
		$line =~ s/[ \t]*\#.*$//;
		next if ($line =~ /^[ \t]*$/);

		if ($line =~ /^E_PACKAGE[ \t]+(.*)$/) {
			if ($package) {
				die "Duplicated E_PACKAGE directive.";
			}
			else {
				$package = $1;
				$e_package = 1;
			}
		}
		elsif ($line =~ /^PACKAGE[ \t]+(.*)$/) {
			if ($package) {
				if (!$e_package && $package != $1) {
					die "Inconsistent PACKAGE directive.";
				}
			}
			else {
				$package = $1;
			}
		}
		elsif ($line =~ /^VERSION[ \t]+(.*)$/) {
			if ($version) {
				if (!$e_package && $version != $1) {
					die "Inconsistent VERSION directive.";
				}
			}
			else {
				$version = $1;
				if ($version =~ /%date/) {
					@current_time = localtime();
					$vdate = sprintf("%04d%02d%02d", $current_time[5]+1900,
										$current_time[4]+1, $current_time[3]);
					$version =~ s/%date/$vdate/;
				}
			}
		}
		elsif ($line =~ /^INCLUDE[ \t]+(.*)$/) {
			do read_file(do gen_path($dirname, $1));
		}
		else {
			$filename = $prefix."/".$dirname.$line;
			while ($filename =~ s|/[^/]+/\.\./|/|) {}
			if ($file_list{$filename}) {
				die "$filename is duplicated.";
			}
			else {
				push(@file_list, $filename);
				$file_list{$filename} = $filename;
			}
		}
	}
	close($fh);
}

do read_file($arg1);
unless ($package) {
	die "PACKAGE/E_PACKAGE directive not found.";
}
unless ($version) {
	die "VERSION directive not found.";
}

if (! -d "RELEASE") {
	mkdir("RELEASE");
}

$archive_name = $package."-".$version.".tar.gz";
$file_list = join(" ", @file_list);
$command = "tar cvfz RELEASE/$archive_name -C .. $file_list\n";
die if (system($command));
print STDERR "== RELEASE/$archive_name is generated. ==\n";
